version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.11/2020-09-18/bin/darwin/amd64/kubectl && chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      # - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      # - source ~/.bashrc
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod +x ./get_helm.sh && ./get_helm.sh --version v3.1.0
      - export NPM_TOKEN=$(aws secretsmanager get-secret-value --secret-id=npm/dragonchain-dev/read-only | jq -r '.SecretString | fromjson | .NPM_TOKEN')
      - $(aws ecr get-login --no-include-email --region us-west-1)
  build:
    commands:
      - export VERSION=$(jq -r .version package.json)
      - AWS_CLUSTER_NAME="raiinmaker-staging"
      - NAMESPACE="raiinmaker"
      - if [ -z "$VERSION" ]; then echo "VERSION variable is missing"; exit 1; fi
      - if [ "$STAGE" = "production" ]; then AWS_CLUSTER_NAME="raiinmaker-production"; fi
      - export TAG="$STAGE-$VERSION"
      - echo $NPM_TOKEN
      - docker build . --build-arg NPM_TOKEN=$NPM_TOKEN -t 527252880472.dkr.ecr.us-west-1.amazonaws.com/raiinmaker:$TAG

      - docker push 527252880472.dkr.ecr.us-west-1.amazonaws.com/raiinmaker:$TAG

      - aws cloudformation deploy --template-file ./cloudformation/service.yml --stack-name raiinmaker-$STAGE --parameter-overrides "Stage=$STAGE" --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset --region us-west-1

      - echo Logging in to Amazon EKS...
      - aws eks --region us-west-1 update-kubeconfig --name $AWS_CLUSTER_NAME

      - if [ "$STAGE" = "production" ]; then VALUES="./helm/raiinmaker/values-prod.yaml"; else VALUES="./helm/raiinmaker/values.yaml"; fi
      - helm upgrade --install raiinmaker-api --namespace $NAMESPACE -f $VALUES ./helm/raiinmaker --set image.tag=$TAG
