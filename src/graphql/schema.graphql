type Mutation {
  newUser: User
  newCampaign(name:String!,coiinTotal:Float!,target:String!,beginDate:String,endDate:String,description:String,company:String): Campaign
  updateCampaign(name:String!,coiinTotal:Float,target:String,beginDate:String,endDate:String,description:String): Campaign
  deleteCampaign(id:String!): Campaign
  participate(campaignId:String!): Participant
  removeParticipation(campaignId:String!): User
  trackClick(participantId:String!): Participant
  promoteUserPermissions(userId:String!,company:String,role:String): User
}

type Query {
  listCampaigns(open:Boolean,skip:Int,take:Int): PaginatedCampaignResults
  listUsers(skip:Int,take:Int): PaginatedUserResults
  helloWorld: String
  me: User
}

type User {
  id: String
  email: String
  campaigns: [Participant]
  wallet: Wallet
}

type Wallet {
  id: String
  balance: Float
}

type PaginatedUserResults {
  results: [User]
  total: Int
}

type PaginatedCampaignResults {
  results: [Campaign]
  total: Int
}

type Campaign {
  id: String
  name: String
  beginDate: String
  endDate: String
  coiinTotal: Float
  target: String
  description: String
  participants: [Participant]
}

type Participant {
  id: String
  clickCount: Int
  user: User
  campaign: Campaign
}