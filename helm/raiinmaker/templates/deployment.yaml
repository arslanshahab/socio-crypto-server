apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "raiinmaker.fullname" . }}-server
  labels:
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/name: {{ include "raiinmaker.name" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: webserver
    server: 'true'
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      helm.sh/chart: {{ include "raiinmaker.chart" . }}
      app.kubernetes.io/name: {{ include "raiinmaker.name" . }}
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: webserver
  template:
    metadata:
      labels:
        helm.sh/chart: {{ include "raiinmaker.chart" . }}
        app.kubernetes.io/name: {{ include "raiinmaker.name" . }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: webserver
      annotations:
        iam.amazonaws.com/role: {{ .Values.data.IAM_ROLE }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "raiinmaker.fullname" . }}-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            failureThreshold: 3
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /v1/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            failureThreshold: 3
            periodSeconds: 60
            timeoutSeconds: 30
          env:
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: postgresql-password
          envFrom:
            - configMapRef:
                name: "{{ include "raiinmaker.fullname" . }}-server-env"
          volumeMounts:
            - name: firebase-credentials
              mountPath: "/var/secrets/firebase-credentials"
              readOnly: true
            - name: bearer-token
              mountPath: "/var/secrets/bearer-token"
              readOnly: true
            - name: dragonchain-credentials
              mountPath: "/var/secrets/dragonchain-credentials"
              readOnly: true
            - name: encryption-key
              mountPath: "/var/secrets/encryption-key"
              readOnly: true
            - name: twitter-credentials
              mountPath: "/var/secrets/twitter-credentials"
              readOnly: true
            - name: paypal-credentials
              mountPath: "/var/secrets/paypal-credentials"
              readOnly: true
            - name: factor-credentials
              mountPath: "/var/secrets/factor-credentials"
              readOnly: true
            - name: eth-hot-wallet-privkey
              mountPath: "/var/secrets/eth-hot-wallet-privkey"
              readOnly: true
            - name: stripe-api-key
              mountPath: "/var/secrets/stripe-api-key"
              readOnly: true
            - name: stripe-webhook-secret
              mountPath: "/var/secrets/stripe-webhook-secret"
              readOnly: true
            - name: xoxoday
              mountPath: "/var/secrets/xoxoday"
              readOnly: true
            - name: tatum
              mountPath: "/var/secrets/tatum"
              readOnly: true
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      volumes:
        - name: firebase-credentials
          secret:
            secretName: "firebase-credentials"
        - name: bearer-token
          secret:
            secretName: "bearer-token"
        - name: dragonchain-credentials
          secret:
            secretName: dragonchain-credentials
        - name: encryption-key
          secret:
            secretName: encryption-key
        - name: twitter-credentials
          secret:
            secretName: twitter-credentials
        - name: paypal-credentials
          secret:
            secretName: paypal-credentials
        - name: factor-credentials
          secret:
            secretName: factor-credentials
        - name: eth-hot-wallet-privkey
          secret:
            secretName: eth-hot-wallet-privkey
        - name: stripe-api-key
          secret:
            secretName: stripe-api-key
        - name: stripe-webhook-secret
          secret:
            secretName: stripe-webhook-secret
        - name: xoxoday
          secret:
            secretName: xoxoday
        - name: tatum
          secret:
            secretName: tatum
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "raiinmaker.fullname" . }}-redis
  labels:
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/name: {{ include "raiinmaker.name" . }}-redis
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      helm.sh/chart: {{ include "raiinmaker.chart" . }}
      app.kubernetes.io/name: {{ include "raiinmaker.name" . }}-redis
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: redis
  strategy:
      type: Recreate
  template:
    metadata:
      name: {{ include "raiinmaker.fullname" . }}-redis
      labels:
        helm.sh/chart: {{ include "raiinmaker.chart" . }}
        app.kubernetes.io/name: {{ include "raiinmaker.name" . }}-redis
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: {{ include "raiinmaker.fullname" . }}-redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["redis-server"]
          args: ["/usr/local/etc/redis/redis.conf"]
          env:
            - name: MASTER
              value: "true"
          ports:
            - name: http
              containerPort: 6379
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
          volumeMounts:
            - mountPath: /usr/local/etc/redis
              name: config
      volumes:
        - name: config
          configMap:
            name: {{ include "raiinmaker.fullname" . }}-redis
            items:
              - key: redis-config
                path: redis.conf
