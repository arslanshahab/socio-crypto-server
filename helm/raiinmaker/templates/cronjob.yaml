apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: social-metrics
  labels:
    app.kubernetes.io/name: social-metrics
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.cron.frequency.social }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: social-metrics
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["node"]
              args: ["./dist/cron/social/index.js"]
              env:
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.postgresql.existingSecret }}
                      key: postgresql-password
              envFrom:
                - configMapRef:
                    name: "{{ include "raiinmaker.fullname" . }}-server-env"
              volumeMounts:
                - name: firebase-credentials
                  mountPath: "/var/secrets/firebase-credentials"
                  readOnly: true
                - name: bearer-token
                  mountPath: "/var/secrets/bearer-token"
                  readOnly: true
                - name: dragonchain-credentials
                  mountPath: "/var/secrets/dragonchain-credentials"
                  readOnly: true
                - name: encryption-key
                  mountPath: "/var/secrets/encryption-key"
                  readOnly: true
                - name: twitter-credentials
                  mountPath: "/var/secrets/twitter-credentials"
                  readOnly: true
                - name: paypal-credentials
                  mountPath: "/var/secrets/paypal-credentials"
                  readOnly: true
                - name: factor-credentials
                  mountPath: "/var/secrets/factor-credentials"
                  readOnly: true
                - name: eth-hot-wallet-privkey
                  mountPath: "/var/secrets/eth-hot-wallet-privkey"
                  readOnly: true
                - name: stripe-api-key
                  mountPath: "/var/secrets/stripe-api-key"
                  readOnly: true
                - name: stripe-webhook-secret
                  mountPath: "/var/secrets/stripe-webhook-secret"
                  readOnly: true
                - name: xoxoday
                  mountPath: "/var/secrets/xoxoday"
                  readOnly: true
                - name: tatum
                  mountPath: "/var/secrets/tatum"
                  readOnly: true
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "100m"
          restartPolicy: OnFailure
          volumes:
            - name: firebase-credentials
              secret:
                secretName: "firebase-credentials"
            - name: bearer-token
              secret:
                secretName: "bearer-token"
            - name: dragonchain-credentials
              secret:
                secretName: dragonchain-credentials
            - name: encryption-key
              secret:
                secretName: encryption-key
            - name: twitter-credentials
              secret:
                secretName: twitter-credentials
            - name: paypal-credentials
              secret:
                secretName: paypal-credentials
            - name: factor-credentials
              secret:
                secretName: factor-credentials
            - name: eth-hot-wallet-privkey
              secret:
                secretName: eth-hot-wallet-privkey
            - name: stripe-api-key
              secret:
                secretName: stripe-api-key
            - name: stripe-webhook-secret
              secret:
                secretName: stripe-webhook-secret
            - name: xoxoday
              secret:
                secretName: xoxoday
            - name: tatum
              secret:
                secretName: tatum
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: daily-participation-metrics
  labels:
    app.kubernetes.io/name: daily-participation-metrics
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.cron.frequency.daily }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: daily-participation-metrics
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["node"]
              args: ["./dist/cron/scoreAggregate/index.js"]
              env:
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.postgresql.existingSecret }}
                      key: postgresql-password
              envFrom:
                - configMapRef:
                    name: "{{ include "raiinmaker.fullname" . }}-server-env"
              volumeMounts:
                - name: firebase-credentials
                  mountPath: "/var/secrets/firebase-credentials"
                  readOnly: true
                - name: bearer-token
                  mountPath: "/var/secrets/bearer-token"
                  readOnly: true
                - name: dragonchain-credentials
                  mountPath: "/var/secrets/dragonchain-credentials"
                  readOnly: true
                - name: encryption-key
                  mountPath: "/var/secrets/encryption-key"
                  readOnly: true
                - name: twitter-credentials
                  mountPath: "/var/secrets/twitter-credentials"
                  readOnly: true
                - name: paypal-credentials
                  mountPath: "/var/secrets/paypal-credentials"
                  readOnly: true
                - name: factor-credentials
                  mountPath: "/var/secrets/factor-credentials"
                  readOnly: true
                - name: eth-hot-wallet-privkey
                  mountPath: "/var/secrets/eth-hot-wallet-privkey"
                  readOnly: true
                - name: stripe-api-key
                  mountPath: "/var/secrets/stripe-api-key"
                  readOnly: true
                - name: stripe-webhook-secret
                  mountPath: "/var/secrets/stripe-webhook-secret"
                  readOnly: true
                - name: xoxoday
                  mountPath: "/var/secrets/xoxoday"
                  readOnly: true
                - name: tatum
                  mountPath: "/var/secrets/tatum"
                  readOnly: true
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "100m"
          restartPolicy: OnFailure
          volumes:
            - name: firebase-credentials
              secret:
                secretName: "firebase-credentials"
            - name: bearer-token
              secret:
                secretName: "bearer-token"
            - name: dragonchain-credentials
              secret:
                secretName: dragonchain-credentials
            - name: encryption-key
              secret:
                secretName: encryption-key
            - name: twitter-credentials
              secret:
                secretName: twitter-credentials
            - name: paypal-credentials
              secret:
                secretName: paypal-credentials
            - name: factor-credentials
              secret:
                secretName: factor-credentials
            - name: eth-hot-wallet-privkey
              secret:
                secretName: eth-hot-wallet-privkey
            - name: stripe-api-key
              secret:
                secretName: stripe-api-key
            - name: stripe-webhook-secret
              secret:
                secretName: stripe-webhook-secret
            - name: xoxoday
              secret:
                secretName: xoxoday
            - name: tatum
              secret:
                secretName: tatum
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: coiin-watcher
  labels:
    app.kubernetes.io/name: coiin-watcher
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.cron.frequency.coiinWatcher }}"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            iam.amazonaws.com/role: {{ .Values.data.IAM_ROLE }}
        spec:
          containers:
            - name: coiin-watcher
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["node"]
              args: ["./dist/cron/coiinWatcher/index.js"]
              env:
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.postgresql.existingSecret }}
                      key: postgresql-password
              envFrom:
                - configMapRef:
                    name: "{{ include "raiinmaker.fullname" . }}-server-env"
              volumeMounts:
                - name: firebase-credentials
                  mountPath: "/var/secrets/firebase-credentials"
                  readOnly: true
                - name: bearer-token
                  mountPath: "/var/secrets/bearer-token"
                  readOnly: true
                - name: dragonchain-credentials
                  mountPath: "/var/secrets/dragonchain-credentials"
                  readOnly: true
                - name: encryption-key
                  mountPath: "/var/secrets/encryption-key"
                  readOnly: true
                - name: twitter-credentials
                  mountPath: "/var/secrets/twitter-credentials"
                  readOnly: true
                - name: paypal-credentials
                  mountPath: "/var/secrets/paypal-credentials"
                  readOnly: true
                - name: factor-credentials
                  mountPath: "/var/secrets/factor-credentials"
                  readOnly: true
                - name: eth-hot-wallet-privkey
                  mountPath: "/var/secrets/eth-hot-wallet-privkey"
                  readOnly: true
                - name: stripe-api-key
                  mountPath: "/var/secrets/stripe-api-key"
                  readOnly: true
                - name: stripe-webhook-secret
                  mountPath: "/var/secrets/stripe-webhook-secret"
                  readOnly: true
                - name: xoxoday
                  mountPath: "/var/secrets/xoxoday"
                  readOnly: true
                - name: tatum
                  mountPath: "/var/secrets/tatum"
                  readOnly: true
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "100m"
          restartPolicy: OnFailure
          volumes:
            - name: firebase-credentials
              secret:
                secretName: "firebase-credentials"
            - name: bearer-token
              secret:
                secretName: "bearer-token"
            - name: dragonchain-credentials
              secret:
                secretName: dragonchain-credentials
            - name: encryption-key
              secret:
                secretName: encryption-key
            - name: twitter-credentials
              secret:
                secretName: twitter-credentials
            - name: paypal-credentials
              secret:
                secretName: paypal-credentials
            - name: factor-credentials
              secret:
                secretName: factor-credentials
            - name: eth-hot-wallet-privkey
              secret:
                secretName: eth-hot-wallet-privkey
            - name: stripe-api-key
              secret:
                secretName: stripe-api-key
            - name: stripe-webhook-secret
              secret:
                secretName: stripe-webhook-secret
            - name: xoxoday
              secret:
                secretName: xoxoday
            - name: tatum
              secret:
                secretName: tatum
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: quality-score
  labels:
    app.kubernetes.io/name: quality-score
    helm.sh/chart: {{ include "raiinmaker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.cron.frequency.qualityScore }}"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            iam.amazonaws.com/role: {{ .Values.data.IAM_ROLE }}
        spec:
          containers:
            - name: quality-score
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["node"]
              args: ["./dist/cron/qualityScore/index.js"]
              env:
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.postgresql.existingSecret }}
                      key: postgresql-password
              envFrom:
                - configMapRef:
                    name: "{{ include "raiinmaker.fullname" . }}-server-env"
              volumeMounts:
                - name: firebase-credentials
                  mountPath: "/var/secrets/firebase-credentials"
                  readOnly: true
                - name: bearer-token
                  mountPath: "/var/secrets/bearer-token"
                  readOnly: true
                - name: dragonchain-credentials
                  mountPath: "/var/secrets/dragonchain-credentials"
                  readOnly: true
                - name: encryption-key
                  mountPath: "/var/secrets/encryption-key"
                  readOnly: true
                - name: twitter-credentials
                  mountPath: "/var/secrets/twitter-credentials"
                  readOnly: true
                - name: paypal-credentials
                  mountPath: "/var/secrets/paypal-credentials"
                  readOnly: true
                - name: factor-credentials
                  mountPath: "/var/secrets/factor-credentials"
                  readOnly: true
                - name: eth-hot-wallet-privkey
                  mountPath: "/var/secrets/eth-hot-wallet-privkey"
                  readOnly: true
                - name: stripe-api-key
                  mountPath: "/var/secrets/stripe-api-key"
                  readOnly: true
                - name: stripe-webhook-secret
                  mountPath: "/var/secrets/stripe-webhook-secret"
                  readOnly: true
                - name: xoxoday
                  mountPath: "/var/secrets/xoxoday"
                  readOnly: true
                - name: tatum
                  mountPath: "/var/secrets/tatum"
                  readOnly: true
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "100m"
          restartPolicy: OnFailure
          volumes:
            - name: firebase-credentials
              secret:
                secretName: "firebase-credentials"
            - name: bearer-token
              secret:
                secretName: "bearer-token"
            - name: dragonchain-credentials
              secret:
                secretName: dragonchain-credentials
            - name: encryption-key
              secret:
                secretName: encryption-key
            - name: twitter-credentials
              secret:
                secretName: twitter-credentials
            - name: paypal-credentials
              secret:
                secretName: paypal-credentials
            - name: factor-credentials
              secret:
                secretName: factor-credentials
            - name: eth-hot-wallet-privkey
              secret:
                secretName: eth-hot-wallet-privkey
            - name: stripe-api-key
              secret:
                secretName: stripe-api-key
            - name: stripe-webhook-secret
              secret:
                secretName: stripe-webhook-secret
            - name: xoxoday
              secret:
                secretName: xoxoday
            - name: tatum
              secret:
                secretName: tatum
---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: coiin-minter-job
#   labels:
#     app.kubernetes.io/name: coiin-minter-job
#     helm.sh/chart: {{ include "raiinmaker.chart" . }}
#     app.kubernetes.io/instance: {{ .Release.Name }}
#     app.kubernetes.io/managed-by: {{ .Release.Service }}
# spec:
#   schedule: "{{ .Values.cron.frequency.coiinMinter }}"
#   jobTemplate:
#     spec:
#       template:
#         metadata:
#           annotations:
#             iam.amazonaws.com/role: {{ .Values.data.IAM_ROLE }}
#         spec:
#           containers:
#             - name: coiin-minter-job
#               image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#               imagePullPolicy: {{ .Values.image.pullPolicy }}
#               command: ["node"]
#               args: ["./dist/cron/coiinMinter/index.js"]
#               env:
#                 - name: PG_PASSWORD
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ .Values.postgresql.existingSecret }}
#                       key: postgresql-password
#               envFrom:
#                 - configMapRef:
#                     name: "{{ include "raiinmaker.fullname" . }}-server-env"
#               volumeMounts:
#                 - name: firebase-credentials
#                   mountPath: "/var/secrets/firebase-credentials"
#                   readOnly: true
#                 - name: bearer-token
#                   mountPath: "/var/secrets/bearer-token"
#                   readOnly: true
#                 - name: dragonchain-credentials
#                   mountPath: "/var/secrets/dragonchain-credentials"
#                   readOnly: true
#                 - name: encryption-key
#                   mountPath: "/var/secrets/encryption-key"
#                   readOnly: true
#                 - name: twitter-credentials
#                   mountPath: "/var/secrets/twitter-credentials"
#                   readOnly: true
#                 - name: paypal-credentials
#                   mountPath: "/var/secrets/paypal-credentials"
#                   readOnly: true
#                 - name: factor-credentials
#                   mountPath: "/var/secrets/factor-credentials"
#                   readOnly: true
#                 - name: eth-hot-wallet-privkey
#                   mountPath: "/var/secrets/eth-hot-wallet-privkey"
#                   readOnly: true
#                 - name: stripe-api-key
#                   mountPath: "/var/secrets/stripe-api-key"
#                   readOnly: true
#                 - name: stripe-webhook-secret
#                   mountPath: "/var/secrets/stripe-webhook-secret"
#                   readOnly: true
#                 - name: xoxoday
#                   mountPath: "/var/secrets/xoxoday"
#                   readOnly: true
#                 - name: tatum
#                   mountPath: "/var/secrets/tatum"
#                   readOnly: true
#                 - name: coiin-minter
#                   mountPath: "/var/secrets/coiin-minter"
#                   readOnly: true
#               resources:
#                 requests:
#                   memory: "128Mi"
#                   cpu: "100m"
#                 limits:
#                   memory: "128Mi"
#                   cpu: "100m"
#           restartPolicy: OnFailure
#           volumes:
#             - name: firebase-credentials
#               secret:
#                 secretName: "firebase-credentials"
#             - name: bearer-token
#               secret:
#                 secretName: "bearer-token"
#             - name: dragonchain-credentials
#               secret:
#                 secretName: dragonchain-credentials
#             - name: encryption-key
#               secret:
#                 secretName: encryption-key
#             - name: twitter-credentials
#               secret:
#                 secretName: twitter-credentials
#             - name: paypal-credentials
#               secret:
#                 secretName: paypal-credentials
#             - name: factor-credentials
#               secret:
#                 secretName: factor-credentials
#             - name: eth-hot-wallet-privkey
#               secret:
#                 secretName: eth-hot-wallet-privkey
#             - name: stripe-api-key
#               secret:
#                 secretName: stripe-api-key
#             - name: stripe-webhook-secret
#               secret:
#                 secretName: stripe-webhook-secret
#             - name: xoxoday
#               secret:
#                 secretName: xoxoday
#             - name: tatum
#               secret:
#                 secretName: tatum
#             - name: coiin-minter
#               secret:
#                 secretName: coiin-minter
# ---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: campaign-audit
#   labels:
#     app.kubernetes.io/name: campaign-audit
#     helm.sh/chart: {{ include "raiinmaker.chart" . }}
#     app.kubernetes.io/instance: {{ .Release.Name }}
#     app.kubernetes.io/managed-by: {{ .Release.Service }}
# spec:
#   schedule: "{{ .Values.cron.frequency.campaignAudit }}"
#   jobTemplate:
#     spec:
#       template:
#         metadata:
#           annotations:
#             iam.amazonaws.com/role: {{ .Values.data.IAM_ROLE }}
#         spec:
#           containers:
#             - name: campaign-audit
#               image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#               imagePullPolicy: {{ .Values.image.pullPolicy }}
#               command: ["node"]
#               args: ["./dist/cron/campaignAudit/index.js"]
#               env:
#                 - name: PG_PASSWORD
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ .Values.postgresql.existingSecret }}
#                       key: postgresql-password
#               envFrom:
#                 - configMapRef:
#                     name: "{{ include "raiinmaker.fullname" . }}-server-env"
#               volumeMounts:
#                 - name: firebase-credentials
#                   mountPath: "/var/secrets/firebase-credentials"
#                   readOnly: true
#                 - name: bearer-token
#                   mountPath: "/var/secrets/bearer-token"
#                   readOnly: true
#                 - name: dragonchain-credentials
#                   mountPath: "/var/secrets/dragonchain-credentials"
#                   readOnly: true
#                 - name: encryption-key
#                   mountPath: "/var/secrets/encryption-key"
#                   readOnly: true
#                 - name: twitter-credentials
#                   mountPath: "/var/secrets/twitter-credentials"
#                   readOnly: true
#                 - name: paypal-credentials
#                   mountPath: "/var/secrets/paypal-credentials"
#                   readOnly: true
#                 - name: factor-credentials
#                   mountPath: "/var/secrets/factor-credentials"
#                   readOnly: true
#                 - name: eth-hot-wallet-privkey
#                   mountPath: "/var/secrets/eth-hot-wallet-privkey"
#                   readOnly: true
#                 - name: stripe-api-key
#                   mountPath: "/var/secrets/stripe-api-key"
#                   readOnly: true
#                 - name: stripe-webhook-secret
#                   mountPath: "/var/secrets/stripe-webhook-secret"
#                   readOnly: true
#                 - name: xoxoday
#                   mountPath: "/var/secrets/xoxoday"
#                   readOnly: true
#                 - name: tatum
#                   mountPath: "/var/secrets/tatum"
#                   readOnly: true
#               resources:
#                 requests:
#                   memory: "128Mi"
#                   cpu: "100m"
#                 limits:
#                   memory: "128Mi"
#                   cpu: "100m"
#           restartPolicy: OnFailure
#           volumes:
#             - name: firebase-credentials
#               secret:
#                 secretName: "firebase-credentials"
#             - name: bearer-token
#               secret:
#                 secretName: "bearer-token"
#             - name: dragonchain-credentials
#               secret:
#                 secretName: dragonchain-credentials
#             - name: encryption-key
#               secret:
#                 secretName: encryption-key
#             - name: twitter-credentials
#               secret:
#                 secretName: twitter-credentials
#             - name: paypal-credentials
#               secret:
#                 secretName: paypal-credentials
#             - name: factor-credentials
#               secret:
#                 secretName: factor-credentials
#             - name: eth-hot-wallet-privkey
#               secret:
#                 secretName: eth-hot-wallet-privkey
#             - name: stripe-api-key
#               secret:
#                 secretName: stripe-api-key
#             - name: stripe-webhook-secret
#               secret:
#                 secretName: stripe-webhook-secret
#             - name: xoxoday
#               secret:
#                 secretName: xoxoday
#             - name: tatum
#               secret:
#                 secretName: tatum